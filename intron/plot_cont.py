import pandas as pd
import matplotlib.pyplot as plt
import argparse
import numpy as np

def parse_args():
    """Parse command line arguments for the plotting script."""
    parser = argparse.ArgumentParser(description="Plot statistics from the contig analysis output file, skipping the first 8 lines.")
    parser.add_argument("input_file", type=str, help="Path to the input file generated by the previous script.")
    parser.add_argument("output_file", type=str, help="Path to the output plot file (e.g., plot.png).")
    return parser.parse_args()

def read_data(input_file):
    """Read the input file, skipping the first 8 lines, and prepare the data for plotting."""
    df = pd.read_csv(input_file, sep="\t", skiprows=7)
    df['LengthCategory'] = pd.cut(df['Length'], bins=[0, 500, 1000, 1500, 2000, np.inf], labels=['0-500', '501-1000', '1001-1500', '1501-2000', '2000+'])
    summary = df.groupby(['LengthCategory', 'DivisibleByThree', 'ContainsTGA']).size().unstack(fill_value=0).stack()
    return summary.unstack(level=[1,2])

def plot_data(summary, output_file):
    """Plot the summary data as stacked bar plots."""
    summary = summary.rename(columns={True: "Yes", False: "No"})
    fig, ax = plt.subplots(figsize=(10, 6))

    # Stacking data for visualization
    summary['Yes'].plot(kind='bar', stacked=True, color=['green', 'lightgreen'], ax=ax, label=['Divisible and Has TGA', 'Divisible No TGA'])
    bottom = summary['Yes'].sum(axis=1)
    summary['No'].plot(kind='bar', stacked=True, color=['red', 'pink'], ax=ax, bottom=bottom, label=['Not Divisible and Has TGA', 'Not Divisible No TGA'])

    plt.ylabel('Count')
    plt.xlabel('Contig Length Category')
    plt.title('Contig Analysis by Length Category')
    plt.legend()
    plt.tight_layout()
    plt.savefig(output_file)
    plt.show()

def main():
    args = parse_args()
    summary = read_data(args.input_file)
    plot_data(summary, args.output_file)
    print(f"Plot saved to {args.output_file}")

if __name__ == "__main__":
    main()

